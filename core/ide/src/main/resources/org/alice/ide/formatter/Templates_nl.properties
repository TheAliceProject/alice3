AbstractValueLiteral = </value/>
Argument = </getParameterNameText()/></expression/>
ArrayAccess = </array/> [ </index/> ]
ArrayInstanceCreation = nieuw </arrayType/> { </expressions/> }
ArrayLength = </array/>.lengte
AssignmentExpression = </leftHandSide/> </_gets_toward_leading_/> </rightHandSide/>
BooleanExpressionBodyPair = als </expression/> is waar dan\n\t</body/>
Comment = // </text/>
ConditionalStatement = </booleanExpressionBodyPairs/>\nelse\n\t</elseBody/>
CountLoop = tel tot </count/>\n\t</body/>\n\t herhaal
DoInOrder = doe in volgorde\n\t</body/>
DoTogether = doe tegelijk\n\t</body/>
FieldAccess = </expression/> </field/>
InfixExpression = </leftOperand/> </operator/> </rightOperand/>
LambdaExpression = </value/>
LocalAccess = </local/>
LogicalComplement = NIET </operand/>
MethodInvocation = </expression/> </method/> </requiredArguments/> </variableArguments/> </keyedArguments/>
NullLiteral = verwijderWaarde
ParameterAccess = </parameter/>
ResourceExpression = </resource/>
ReturnStatement = geefTerug </expression/>
StringConcatenation = </leftOperand/> + </rightOperand/>
SuperConstructorInvocationStatement =  </requiredArguments/> </variableArguments/> </keyedArguments/>
ThisConstructorInvocationStatement =  </requiredArguments/> </variableArguments/> </keyedArguments/>
UserLambda = doe in volgorde\n\t</body/>
WhileLoop = zolang </conditional/>is waar\n\t</body/>\n\t herhaal
