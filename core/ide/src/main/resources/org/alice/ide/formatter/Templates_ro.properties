AbstractConstructor = </getDeclaringType()/>
AbstractDeclaration = </getName()/>
AbstractValueLiteral = </value/>
Argument = </getParameterNameText()/></expression/>
ArrayAccess = </array/>[ </index/> ]
ArrayInstanceCreation = nou </arrayType/> { </expressions/> }
ArrayLength = </array/>.lungime
AssignmentExpression = </leftHandSide/> </_gets_toward_leading_/> </rightHandSide/>
BlockStatement = </statements/>
BooleanExpressionBodyPair = Daca </expression/> este adevarat, atunci\n\t</body/>
Comment = // </text/>
ConditionalStatement = </booleanExpressionBodyPairs/>\naltfel\n\t</elseBody/>
ConstructorBlockStatement = </constructorInvocationStatement/>\n</statements/>
CountLoop = Numara pana la </count/>\n\t</body/>\n\t repeta
DoInOrder = Executa in ordine\n\t</body/>
DoTogether = Executa impreuna\n\t</body/>
EachInArrayTogether = fiecare </__item__/> in </array/> impreuna\n\t</body/>
ExpressionStatement = </expression/>
FieldAccess = </expression/> </field/>
ForEachInArrayLoop = Pentru fiecare </__item__/> in </array/>\n\t</body/>\n\t repeta
InfixExpression = </leftOperand/> </operator/> </rightOperand/>
InstanceCreation = nou </constructor/> </requiredArguments/></variableArguments/></keyedArguments/>
LambdaExpression = </value/>
LocalAccess = </local/>
LocalDeclarationStatement = </__local__/> </_gets_toward_leading_/> </initializer/>
LogicalComplement = NU </operand/>
MethodInvocation = </expression/> </method/> </requiredArguments/></variableArguments/></keyedArguments/>
NullLiteral = dezactivat
ParameterAccess = </parameter/>
ResourceExpression = </resource/>
ReturnStatement = returneaza </expression/>
StringConcatenation = </leftOperand/> + </rightOperand/>
StringLiteral = "</value/>"
SuperConstructorInvocationStatement = super </requiredArguments/> </variableArguments/> </keyedArguments/>
SuperExpression = super
ThisConstructorInvocationStatement = acesta </requiredArguments/></variableArguments/></keyedArguments/>
ThisExpression = acesta
UserLambda = Executa in ordine\n\t</body/>
UserLocal = </getValidName()/>
WhileLoop = Cat timp </conditional/> este adevarat\n\t</body/>\n\t repeta
