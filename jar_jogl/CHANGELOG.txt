Changes between JOGL 1.1.0 and 1.1.1:

 - Fixed a bug in the checking of incoming buffers' sizes to
   glTexImage1D, glTexImage2D, and glTexImage3D.

Changes between JOGL 1.0.0 and 1.1.0:

 - The glext.h and associated header files JOGL uses have been updated
   to OpenGL 2.1 with NVidia's GeForce 8 series extensions. The new
   functions are available as methods in the GL interface.

 - The developer build bundles have been changed to zip archives, so
   instead of having to download multiple jars, you can now just
   download the zip archive for your particular platform. The new zip
   archives are versioned with the build date.

 - The source distribution now contains the generated sources like
   GL.java, GLU.java, etc. for more convenient use in IDEs.

 - The chosen GLCapabilities are now exposed from the GLDrawable via
   GLDrawable.getChosenGLCapabilities(); this functionality works on
   all platforms even in cases where the GLCapabilitiesChooser is not
   supported, and attempts to provide correct answers so programs can
   make decisions based on the results.

 - The native code for the "DRI hack" (to support the open-source DRI
   drivers on Linux and other X11 platforms) has been removed; JOGL
   now uses the GlueGen NativeLibrary class for this purpose.
   Reliability improvements have been made to the implementation of
   this class; it has been confirmed as working again with ATI's
   proprietary drivers on Linux and should also work better with
   NVidia's drivers.

 - The GlueGen runtime classes have been removed from jogl.jar. These
   have been factored out into gluegen-rt.jar and are referenced by
   both the JOGL and JOAL projects.

 - Thanks to John Burkey some optimizations have been made to the
   buffer object-related validity checks in glVertexPointer, etc. as
   well as a buffer size query that was being made in the glMapBuffer
   implementation. This improves performance for applications
   performing a lot of VBO- or vertex array-based rendering, in
   particular with the multithreaded OpenGL implementation on Mac OS
   X.

 - The JOGL applet launcher now supports deployment of applets which
   use both OpenGL for 3D graphics via JOGL as well as OpenAL for
   spatialized audio via JOAL. It now prompts the user on Windows
   platforms to allow it to enable the -Dsun.java2d.noddraw=true
   system property for best robustness. It has been updated for the
   changes in the GlueGen runtime classes and native library
   structure. Some bugs have been fixed, some of which were preventing
   different JOGL-based applets from being deployed from the same
   codebase. The documentation and on-line examples have been updated
   as well.

 - The TextureIO implementation has been changed to no longer copy the
   data associated with BufferedImage TextureData objects. Instead,
   the necessary vertical flip is now implemented by flipping the
   texture coordinates vertically.

 - An API for updating a sub-image of a Texture object from a
   sub-portion of a TextureData object has been added.

 - A GLContext.copy() operation has been added based on community
   feedback.

 - Three helper classes have been added to the com.sun.opengl.util.j2d
   package to improve interoperability between JOGL and Java 2D:
   TextureRenderer, Overlay and TextRenderer. The TextureRenderer
   supports drawing into an OpenGL texture using Java 2D. The Overlay
   class provides a convenient Java 2D-based overlay on top of an
   arbitrary GLDrawable. The TextRenderer class supports drawing of
   Java 2D text into an OpenGL context. Thanks to Chris Campbell of
   the Java 2D team for collaboration and to the JOGL community for
   extensive feedback and testing assistance.

 - Various bug fixes and robustness improvements were made to the
   GlueGen runtime, JOGL and GLU implementations.

 - Fixes to the DDSImage class were contributed by the community: a
   bug fix to mipmap handling and support for cubemap textures. Thanks
   to java.net user bandures.

 - TextureIO.setTexRectEnabled() and isTexRectEnabled() were added
   based on feedback from Chris Campbell, in order to simplify the
   writing of pixel shaders which have different samplers for
   GL_TEXTURE_2D and GL_TEXTURE_RECTANGLE_ARB targets.

 - Thanks to Erik Tollerud, the links to the OpenGL documentation in
   the JOGL javadoc were revised to point to the new on-line man pages
   in the OpenGL SDK.

 - Support for automatic mipmap generation via GL_GENERATE_MIPMAP was
   added to the TextureIO, TextureRenderer and TextRenderer classes.

 - Windows/AMD64 binaries, including the JOGL Cg binding, are now
   supplied.

 - Worked around breakage of JOGL with 5.0u10; see Sun bug IDs 6504460
   and 6333613.
